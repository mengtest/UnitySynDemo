//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameEnum_EffectTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(GameEnum.EffectType));
		L.RegVar("Effect", get_Effect, null);
		L.RegVar("PsEffect", get_PsEffect, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<GameEnum.EffectType>.Check = CheckType;
		StackTraits<GameEnum.EffectType>.Push = Push;
	}

	static void Push(IntPtr L, GameEnum.EffectType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(GameEnum.EffectType), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Effect(IntPtr L)
	{
		ToLua.Push(L, GameEnum.EffectType.Effect);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PsEffect(IntPtr L)
	{
		ToLua.Push(L, GameEnum.EffectType.PsEffect);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		GameEnum.EffectType o = (GameEnum.EffectType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

