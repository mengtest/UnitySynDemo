//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameEnum_PlayModeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameEnum.PlayMode), typeof(System.Object));
		L.RegFunction("New", _CreateGameEnum_PlayMode);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("ReplayMode", get_ReplayMode, null);
		L.RegVar("SingleMode", get_SingleMode, null);
		L.RegVar("MultiplayerMode", get_MultiplayerMode, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGameEnum_PlayMode(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				GameEnum.PlayMode obj = new GameEnum.PlayMode();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GameEnum.PlayMode.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ReplayMode(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameEnum.PlayMode.ReplayMode);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SingleMode(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameEnum.PlayMode.SingleMode);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MultiplayerMode(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameEnum.PlayMode.MultiplayerMode);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

