//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameEnum_Weapon_GunTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(GameEnum.Weapon_GunType));
		L.RegVar("NONE", get_NONE, null);
		L.RegVar("AR", get_AR, null);
		L.RegVar("DMR", get_DMR, null);
		L.RegVar("SR", get_SR, null);
		L.RegVar("LMG", get_LMG, null);
		L.RegVar("SMG", get_SMG, null);
		L.RegVar("ShotGun", get_ShotGun, null);
		L.RegVar("Special", get_Special, null);
		L.RegVar("Launchers", get_Launchers, null);
		L.RegVar("Pistol", get_Pistol, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<GameEnum.Weapon_GunType>.Check = CheckType;
		StackTraits<GameEnum.Weapon_GunType>.Push = Push;
	}

	static void Push(IntPtr L, GameEnum.Weapon_GunType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(GameEnum.Weapon_GunType), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NONE(IntPtr L)
	{
		ToLua.Push(L, GameEnum.Weapon_GunType.NONE);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AR(IntPtr L)
	{
		ToLua.Push(L, GameEnum.Weapon_GunType.AR);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DMR(IntPtr L)
	{
		ToLua.Push(L, GameEnum.Weapon_GunType.DMR);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SR(IntPtr L)
	{
		ToLua.Push(L, GameEnum.Weapon_GunType.SR);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LMG(IntPtr L)
	{
		ToLua.Push(L, GameEnum.Weapon_GunType.LMG);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SMG(IntPtr L)
	{
		ToLua.Push(L, GameEnum.Weapon_GunType.SMG);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ShotGun(IntPtr L)
	{
		ToLua.Push(L, GameEnum.Weapon_GunType.ShotGun);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Special(IntPtr L)
	{
		ToLua.Push(L, GameEnum.Weapon_GunType.Special);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Launchers(IntPtr L)
	{
		ToLua.Push(L, GameEnum.Weapon_GunType.Launchers);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Pistol(IntPtr L)
	{
		ToLua.Push(L, GameEnum.Weapon_GunType.Pistol);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		GameEnum.Weapon_GunType o = (GameEnum.Weapon_GunType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

