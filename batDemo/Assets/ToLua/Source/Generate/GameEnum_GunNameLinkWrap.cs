//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameEnum_GunNameLinkWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(GameEnum.GunNameLink));
		L.RegVar("M4", get_M4, null);
		L.RegVar("AKM", get_AKM, null);
		L.RegVar("M16A4", get_M16A4, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<GameEnum.GunNameLink>.Check = CheckType;
		StackTraits<GameEnum.GunNameLink>.Push = Push;
	}

	static void Push(IntPtr L, GameEnum.GunNameLink arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(GameEnum.GunNameLink), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_M4(IntPtr L)
	{
		ToLua.Push(L, GameEnum.GunNameLink.M4);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AKM(IntPtr L)
	{
		ToLua.Push(L, GameEnum.GunNameLink.AKM);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_M16A4(IntPtr L)
	{
		ToLua.Push(L, GameEnum.GunNameLink.M16A4);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		GameEnum.GunNameLink o = (GameEnum.GunNameLink)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

