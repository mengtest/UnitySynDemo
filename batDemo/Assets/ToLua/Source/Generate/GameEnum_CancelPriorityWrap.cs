//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameEnum_CancelPriorityWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameEnum.CancelPriority), typeof(System.Object));
		L.RegFunction("New", _CreateGameEnum_CancelPriority);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("CantDoAnyAction", get_CantDoAnyAction, set_CantDoAnyAction);
		L.RegVar("Stand_Move_Null", get_Stand_Move_Null, set_Stand_Move_Null);
		L.RegVar("BaseAction", get_BaseAction, set_BaseAction);
		L.RegVar("NormalAction", get_NormalAction, set_NormalAction);
		L.RegVar("SkillAction", get_SkillAction, set_SkillAction);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGameEnum_CancelPriority(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				GameEnum.CancelPriority obj = new GameEnum.CancelPriority();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GameEnum.CancelPriority.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CantDoAnyAction(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, GameEnum.CancelPriority.CantDoAnyAction);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Stand_Move_Null(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, GameEnum.CancelPriority.Stand_Move_Null);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BaseAction(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, GameEnum.CancelPriority.BaseAction);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NormalAction(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, GameEnum.CancelPriority.NormalAction);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SkillAction(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, GameEnum.CancelPriority.SkillAction);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CantDoAnyAction(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			GameEnum.CancelPriority.CantDoAnyAction = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Stand_Move_Null(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			GameEnum.CancelPriority.Stand_Move_Null = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BaseAction(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			GameEnum.CancelPriority.BaseAction = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_NormalAction(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			GameEnum.CancelPriority.NormalAction = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SkillAction(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			GameEnum.CancelPriority.SkillAction = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

