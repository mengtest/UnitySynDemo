//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameEnum_ControllerCmdWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameEnum.ControllerCmd), typeof(System.Object));
		L.RegFunction("New", _CreateGameEnum_ControllerCmd);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegConstant("OnJoy_Move", 1);
		L.RegConstant("OnJoy_Up", 2);
		L.RegConstant("OnJump", 3);
		L.RegConstant("Char_Move", 10);
		L.RegConstant("Char_StopMove", 11);
		L.RegConstant("Start_AI", 12);
		L.RegConstant("Stop_AI", 13);
		L.RegConstant("Paused_AI", 14);
		L.RegConstant("Continue_AI", 15);
		L.RegConstant("Char_FollowTarget", 16);
		L.RegConstant("Char_MoveToPos", 17);
		L.RegConstant("Char_UseSkill", 18);
		L.RegConstant("Char_MoveToPosList", 19);
		L.RegConstant("Char_MoveToPosWithoutPathFinder", 20);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGameEnum_ControllerCmd(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				GameEnum.ControllerCmd obj = new GameEnum.ControllerCmd();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GameEnum.ControllerCmd.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

