//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameEnum_Weapon_GrenadeTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(GameEnum.Weapon_GrenadeType));
		L.RegVar("FragGrenade", get_FragGrenade, null);
		L.RegVar("SmokeGrenade", get_SmokeGrenade, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<GameEnum.Weapon_GrenadeType>.Check = CheckType;
		StackTraits<GameEnum.Weapon_GrenadeType>.Push = Push;
	}

	static void Push(IntPtr L, GameEnum.Weapon_GrenadeType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(GameEnum.Weapon_GrenadeType), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FragGrenade(IntPtr L)
	{
		ToLua.Push(L, GameEnum.Weapon_GrenadeType.FragGrenade);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SmokeGrenade(IntPtr L)
	{
		ToLua.Push(L, GameEnum.Weapon_GrenadeType.SmokeGrenade);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		GameEnum.Weapon_GrenadeType o = (GameEnum.Weapon_GrenadeType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

