//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameEnum_ObjTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(GameEnum.ObjType));
		L.RegVar("Obj", get_Obj, null);
		L.RegVar("Character", get_Character, null);
		L.RegVar("Monster", get_Monster, null);
		L.RegVar("Player", get_Player, null);
		L.RegVar("Item", get_Item, null);
		L.RegVar("Weapon", get_Weapon, null);
		L.RegVar("Gun", get_Gun, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<GameEnum.ObjType>.Check = CheckType;
		StackTraits<GameEnum.ObjType>.Push = Push;
	}

	static void Push(IntPtr L, GameEnum.ObjType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(GameEnum.ObjType), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Obj(IntPtr L)
	{
		ToLua.Push(L, GameEnum.ObjType.Obj);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Character(IntPtr L)
	{
		ToLua.Push(L, GameEnum.ObjType.Character);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Monster(IntPtr L)
	{
		ToLua.Push(L, GameEnum.ObjType.Monster);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Player(IntPtr L)
	{
		ToLua.Push(L, GameEnum.ObjType.Player);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Item(IntPtr L)
	{
		ToLua.Push(L, GameEnum.ObjType.Item);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Weapon(IntPtr L)
	{
		ToLua.Push(L, GameEnum.ObjType.Weapon);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Gun(IntPtr L)
	{
		ToLua.Push(L, GameEnum.ObjType.Gun);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		GameEnum.ObjType o = (GameEnum.ObjType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

