//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameEnum_HitMatTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameEnum.HitMatType), typeof(System.Object));
		L.RegFunction("New", _CreateGameEnum_HitMatType);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Prototype", get_Prototype, null);
		L.RegVar("Meat", get_Meat, null);
		L.RegVar("Metal", get_Metal, null);
		L.RegVar("Sand", get_Sand, null);
		L.RegVar("Snow", get_Snow, null);
		L.RegVar("Stone", get_Stone, null);
		L.RegVar("Wood", get_Wood, null);
		L.RegVar("Grass", get_Grass, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGameEnum_HitMatType(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				GameEnum.HitMatType obj = new GameEnum.HitMatType();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GameEnum.HitMatType.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Prototype(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameEnum.HitMatType.Prototype);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Meat(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameEnum.HitMatType.Meat);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Metal(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameEnum.HitMatType.Metal);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Sand(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameEnum.HitMatType.Sand);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Snow(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameEnum.HitMatType.Snow);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Stone(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameEnum.HitMatType.Stone);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Wood(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameEnum.HitMatType.Wood);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Grass(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameEnum.HitMatType.Grass);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

