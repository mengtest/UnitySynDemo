//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LayerHelperWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LayerHelper), typeof(System.Object));
		L.RegFunction("CompareLayer", CompareLayer);
		L.RegFunction("ChangeObjLayerToUI", ChangeObjLayerToUI);
		L.RegFunction("SetObjRenderLayer", SetObjRenderLayer);
		L.RegFunction("SetObjLayer", SetObjLayer);
		L.RegFunction("GetLayerMask", GetLayerMask);
		L.RegFunction("GetEverythingMask", GetEverythingMask);
		L.RegFunction("GetNothingMask", GetNothingMask);
		L.RegFunction("GetParachutingLandMask", GetParachutingLandMask);
		L.RegFunction("GetHitLayerMask", GetHitLayerMask);
		L.RegFunction("GetEnviromentLayerMask", GetEnviromentLayerMask);
		L.RegFunction("GetGroundLayerMask", GetGroundLayerMask);
		L.RegFunction("New", _CreateLayerHelper);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLayerHelper(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				LayerHelper obj = new LayerHelper();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: LayerHelper.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CompareLayer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
			ELayer arg1 = (ELayer)ToLua.CheckObject(L, 2, typeof(ELayer));
			bool o = LayerHelper.CompareLayer(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ChangeObjLayerToUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
			LayerHelper.ChangeObjLayerToUI(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetObjRenderLayer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
			ELayer arg1 = (ELayer)ToLua.CheckObject(L, 2, typeof(ELayer));
			LayerHelper.SetObjRenderLayer(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetObjLayer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
			ELayer arg1 = (ELayer)ToLua.CheckObject(L, 2, typeof(ELayer));
			LayerHelper.SetObjLayer(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetLayerMask(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			ELayer[] arg0 = ToLua.CheckParamsObject<ELayer>(L, 1, count);
			int o = LayerHelper.GetLayerMask(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetEverythingMask(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			int o = LayerHelper.GetEverythingMask();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetNothingMask(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			int o = LayerHelper.GetNothingMask();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetParachutingLandMask(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			int o = LayerHelper.GetParachutingLandMask();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetHitLayerMask(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			int o = LayerHelper.GetHitLayerMask();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetEnviromentLayerMask(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			int o = LayerHelper.GetEnviromentLayerMask();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetGroundLayerMask(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			int o = LayerHelper.GetGroundLayerMask();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

