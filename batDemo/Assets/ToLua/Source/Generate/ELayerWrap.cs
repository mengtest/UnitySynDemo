//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ELayerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(ELayer));
		L.RegVar("Default", get_Default, null);
		L.RegVar("TransparentFX", get_TransparentFX, null);
		L.RegVar("IgonreRaycast", get_IgonreRaycast, null);
		L.RegVar("Water", get_Water, null);
		L.RegVar("UI", get_UI, null);
		L.RegVar("Cover", get_Cover, null);
		L.RegVar("IgnoreShot", get_IgnoreShot, null);
		L.RegVar("CoverInvisible", get_CoverInvisible, null);
		L.RegVar("Player", get_Player, null);
		L.RegVar("Enemy", get_Enemy, null);
		L.RegVar("Bound", get_Bound, null);
		L.RegVar("Trigger", get_Trigger, null);
		L.RegVar("FPS", get_FPS, null);
		L.RegVar("Damageable", get_Damageable, null);
		L.RegVar("Scope", get_Scope, null);
		L.RegVar("PoisonCircle", get_PoisonCircle, null);
		L.RegVar("Item", get_Item, null);
		L.RegVar("Grass", get_Grass, null);
		L.RegVar("PostProcessing", get_PostProcessing, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<ELayer>.Check = CheckType;
		StackTraits<ELayer>.Push = Push;
	}

	static void Push(IntPtr L, ELayer arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(ELayer), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Default(IntPtr L)
	{
		ToLua.Push(L, ELayer.Default);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TransparentFX(IntPtr L)
	{
		ToLua.Push(L, ELayer.TransparentFX);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IgonreRaycast(IntPtr L)
	{
		ToLua.Push(L, ELayer.IgonreRaycast);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Water(IntPtr L)
	{
		ToLua.Push(L, ELayer.Water);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UI(IntPtr L)
	{
		ToLua.Push(L, ELayer.UI);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Cover(IntPtr L)
	{
		ToLua.Push(L, ELayer.Cover);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IgnoreShot(IntPtr L)
	{
		ToLua.Push(L, ELayer.IgnoreShot);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CoverInvisible(IntPtr L)
	{
		ToLua.Push(L, ELayer.CoverInvisible);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Player(IntPtr L)
	{
		ToLua.Push(L, ELayer.Player);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Enemy(IntPtr L)
	{
		ToLua.Push(L, ELayer.Enemy);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Bound(IntPtr L)
	{
		ToLua.Push(L, ELayer.Bound);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Trigger(IntPtr L)
	{
		ToLua.Push(L, ELayer.Trigger);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FPS(IntPtr L)
	{
		ToLua.Push(L, ELayer.FPS);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Damageable(IntPtr L)
	{
		ToLua.Push(L, ELayer.Damageable);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Scope(IntPtr L)
	{
		ToLua.Push(L, ELayer.Scope);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PoisonCircle(IntPtr L)
	{
		ToLua.Push(L, ELayer.PoisonCircle);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Item(IntPtr L)
	{
		ToLua.Push(L, ELayer.Item);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Grass(IntPtr L)
	{
		ToLua.Push(L, ELayer.Grass);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PostProcessing(IntPtr L)
	{
		ToLua.Push(L, ELayer.PostProcessing);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		ELayer o = (ELayer)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

